# tasks.yaml

DescribeFunctionPurpose:
  agent: FunctionDescriber
  description: >
    Using the provided repository link, file name, and the specific line number where the function is located,
    first retrieve the surrounding code context to understand the function’s role within the codebase.
    Then, take {input_json} containing the function's name, full body, and its changes (old version and new version of the function),
    and analyze the function's logic, structure, and naming to generate a high-level explanation of what the function does.
  expected_output: >
    A 1–3 sentence summary in plain English describing the role and purpose of the function.
    The explanation should reflect insights gained from both the code context and the function’s own implementation.
    Focus on what the function is trying to achieve or represent—not implementation details.

IdentifyCodeChangePros:
  agent: CodeChangeProspector
  description: >
    Take {input_json} containing the old version and the new version of a function. Analyze the changes between them and determine what benefits the new version introduces compared to the old one.
  expected_output: >
    A list of 1–3 concise bullet points explaining the advantages of the new code over the old code. These may include performance improvements, bug fixes, increased readability, better modularity, or more idiomatic structure.
  context:
    - DescribeFunctionPurpose

IdentifyCodeChangeCons:
  agent: CodeChangeCritic
  description: >
    Take {input_json} containing the old version and new version of a function. Analyze the differences and identify potential disadvantages or risks introduced by the new version.
  expected_output: >
    A list of 1–3 concise bullet points highlighting possible downsides of the code change. These may include reduced readability, added complexity, performance regressions, increased risk of edge-case failures, or tighter coupling.
  context:
    - DescribeFunctionPurpose

SummarizeCodeChangeReport:
  agent: CodeChangeSummarizer
  description: >
    Take the following inputs:
    - function_description: A plain-English explanation of what the function is designed to do.
    - pros_report: A list of benefits introduced by the code change.
    - cons_report: A list of drawbacks or trade-offs introduced by the change.

    Based on these, generate a Markdown-formatted evaluation report that includes:
    - Title
    - Function Purpose
    - Summary of Code Change
    - Reasons for the Change
    - Pros
    - Cons
    - Overall Confidence Score (out of 100)
  expected_output: >
    A well-structured Markdown report summarizing the purpose of the function, what changed, why it changed, pros, cons, and a confidence score from 0 to 100. The tone should be objective and professional—suitable for documentation or PR summaries.
  context:
    - DescribeFunctionPurpose
    - IdentifyCodeChangePros
    - IdentifyCodeChangeCons
